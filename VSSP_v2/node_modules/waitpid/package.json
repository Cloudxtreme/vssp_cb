{
  "name": "waitpid",
  "version": "0.1.1",
  "description": "A node.js binding to the waitpid() syscall.",
  "main": "lib/waitpid.js",
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/AvianFlu/node-waitpid.git"
  },
  "keywords": [
    "waitpid",
    "child process"
  ],
  "author": {
    "name": "AvianFlu"
  },
  "license": "MIT",
  "gypfile": true,
  "readme": "# node-waitpid\n\nEver been running a child process, and wished you could just make the parent\nnode.js process stop and wait until that child exited?\n\nWell, thanks to the tangential needs of some dubious mad science, now you can,\nwithout all the weeping and gnashing of teeth.\n\n```js\nvar waitpid = require('waitpid');\n\nvar status = waitpid(child.pid);\n\n```\n\nAssuming a child process spawned as `child` above, waitpid will suspend the\nparent until the child is finished.\n\n## Why would you ever do such a thing!?\n\nLike I said, mad science.  It will make sense eventually.\n",
  "readmeFilename": "README.md",
  "_id": "waitpid@0.1.1",
  "dist": {
    "shasum": "9e562dae44afb5594986109d4bc990dcf85e34b7"
  },
  "_from": "waitpid@*",
  "_resolved": "https://registry.npmjs.org/waitpid/-/waitpid-0.1.1.tgz"
}
