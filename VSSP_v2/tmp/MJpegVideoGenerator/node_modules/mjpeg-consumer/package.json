{
  "name": "mjpeg-consumer",
  "version": "0.4.0",
  "description": "a stream implementation that consumes http mjpeg streams and emits jpegs as buffers",
  "main": "index.js",
  "dependencies": {
    "buffertools": "~1.1.0"
  },
  "devDependencies": {
    "request": "~2.12.0",
    "file-on-write": "~0.2.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mmaelzer/mjpeg-consumer"
  },
  "author": {
    "name": "Mike Maelzer",
    "email": "mmaelzer@gmail.com"
  },
  "license": "MIT",
  "keywords": [
    "mjpg",
    "mjpeg",
    "motion jpeg",
    "stream",
    "http",
    "ip camera"
  ],
  "readme": "mjpeg-consumer\n==================\n  \nA node.js stream implementation that consumes http mjpeg streams and emits jpegs.\n  \n###Install###\n\n\tnpm install mjpeg-consumer\n  \n----------------------  \n\n###Objects###\nRequiring the `mjpeg-consumer` module returns a readable/writable stream implementation that takes an http mjpeg stream and emits jpegs.\n\n```javascript\nvar MjpegConsumer = require(\"mjpeg-consumer\");\nvar consumer = new MjpegConsumer();\n```\n\n----------------------  \n###Usage###\nThe `mjpeg-consumer` isn't very useful without a writable pipe to pipe jpegs to. I've built the [file-on-write](https://github.com/mmaelzer/file-on-write) stream to write a file every time `write` is called on it. The below example opens a stream to an IP camera, pipes the results to the `mjpeg-consumer` which processes the stream and emits parsed jpegs to the `file-on-write` writer.\n\n```javascript\nvar request = require(\"request\");\nvar MjpegConsumer = require(\"mjpeg-consumer\");\nvar FileOnWrite = require(\"file-on-write\");\n\nvar writer = new FileOnWrite({ \n\tpath: './video',\n\text: '.jpg'\n});\nvar consumer = new MjpegConsumer();\n\nrequest(\"http://192.168.1.2/videostream.cgi\").pipe(consumer).pipe(writer);\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mmaelzer/mjpeg-consumer/issues"
  },
  "homepage": "https://github.com/mmaelzer/mjpeg-consumer",
  "_id": "mjpeg-consumer@0.4.0",
  "_shasum": "9f4f422c8dfe3a946577cd6418a9598113ce1547",
  "_from": "mjpeg-consumer@*",
  "_resolved": "https://registry.npmjs.org/mjpeg-consumer/-/mjpeg-consumer-0.4.0.tgz"
}
